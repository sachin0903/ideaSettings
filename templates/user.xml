<templateSet group="user">
  <template name="ng" value="import {Component} from '@angular/core';&#10;&#10;@Component({ selector: '$selector$', templateUrl: '$selector$.component.html' })&#10;export class $something$Component {$end$&#10;}&#10;" description="Angular 4 Component" toReformat="false" toShortenFQNames="true">
    <variable name="selector" expression="lowercaseAndDash(String)" defaultValue="&quot;component&quot;" alwaysStopAt="true" />
    <variable name="something" expression="" defaultValue="capitalize(camelCase(selector))" alwaysStopAt="false" />
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="rc" value="import React, {Component} from 'react';&#10;&#10;interface $interface${&#10;    &#10;}&#10;&#10;export class $component$ extends Component&lt;$interface$&gt; {&#10;  public render() {&#10;    return (&#10;    $END$&#10;    );&#10;  }&#10;}" description="React Component" toReformat="false" toShortenFQNames="true">
    <variable name="component" expression="capitalize(String)" defaultValue="&quot;Component&quot;" alwaysStopAt="true" />
    <variable name="interface" expression="" defaultValue="concat(component, &quot;Props&quot;)" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="modelRep" value="export const $asdf$: ModelRepresentation&lt;$asdf$Attributes, $asdf$Instance&gt; = {&#10;    fields: {},&#10;    name: '$end$',&#10;    options: {}&#10;};" description="" toReformat="false" toShortenFQNames="true">
    <variable name="asdf" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="mdl" value="export class $model$ extends Model {&#10;  public static init(sequelize) {&#10;    const fields: ModelFields&lt;$model$Attributes&gt; = {};&#10;    &#10;    const options: InitOptions = {&#10;      sequelize,&#10;      timestamps: false&#10;    };&#10;     &#10;    return super.init(fields, options);&#10;  }&#10;}" description="Seuqlize Model" toReformat="false" toShortenFQNames="true">
    <variable name="model" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="init" value="export class $model$ extends Model {}&#10;&#10;export const $model$Init: ModelInit&lt;$model$Attributes&gt; = {&#10;  model: $model$,&#10;  fields: {},&#10;  options: {&#10;    timestamps: false&#10;  }&#10;};" description="Model Init" toReformat="false" toShortenFQNames="true">
    <variable name="model" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>